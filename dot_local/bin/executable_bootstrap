#! /usr/bin/bash

set -eu

full_install=0
apt_install=0
pyenv_install=0
chezmoi_install=0
flatpak_install=0
sway_install=0
fzf_install=0
nvim_install=0
duf_install=0

pyenv_dir=~/programs/pyenv
fzf_dir=~/programs/fzf

print_help() {
cat << EOF

Installs my typical setup. Supported Arguments:
     --full: install everything.
     --apt: install all apt-depending programs
     --pyenv
     --flatpak: will install flatpak, signal and telegram
     --chezmoi
     --sway
     --fzf
     --nvim
     --duf
EOF
}

create-sway-exec-files() {
sudo cat > /usr/bin/my-sway << EOF
#! /usr/bin/sh

export PATH=\$HOME/programs/fzf/bin:\$PATH
exec sway
EOF

sudo chmod a+x /usr/bin/my-sway

sudo cat > /usr/share/wayland-sessions/my-sway.desktop << EOF
[Desktop Entry]
Name=My Sway
Comment=An i3-compatible Wayland compositor
Exec=my-sway
Type=Application
EOF
}

get_github_latest_release_link() {
    repo_url=$1
    url_format_str=$2
    python_proc=$(cat << EOF
import re
import sys

curl_out = sys.stdin.read()
#print(curl_out)
match = re.match(r'<html><body>You are being <a href="(.*?)/releases/tag/([^"]+)">redirected</a>.</body></html>', curl_out)
if match:
    repo_url = match.group(1)
    tag = match.group(2)
    print(f"{repo_url}/releases/download/{tag}/$url_format_str")
EOF
)
    
    latest_release_url=${repo_url}/releases/latest
    curl $latest_release_url 2>/dev/null | \
        python3 <(echo -e "$python_proc")
}

if [ $# = 0 ]; then
    print_help
    exit 0
fi

while [[ $# -gt 0 ]]; do
    val="$1"

	case $val in
		--full)
			full_install=1
			shift 
			;;
		--apt)
			apt_install=1
			shift 
			;;
        --pyenv)
            pyenv_install=1
            shift
            ;;
        --chezmoi)
            chezmoi_install=1
            shift
            ;;
        --flatpak)
            flatpak_install=1
            shift
            ;;
        --sway)
            sway_install=1
            shift
            ;;
        --nvim)
            nvim_install=1
            shift
            ;;
				--duf)
					  duf_install=1
						shift
						;;
        # option value
		# --searchpath)
		# 	SEARCHPATH="$2"
		# 	shift # past argument
		# 	shift
		# 	;;
		*)    # unknown option
			echo Unknown argument.
			print_help
			exit 1
			;;
	esac
done

if [[ $full_install = 1 ]]; then
    echo Full install, running apt update ...
    sudo apt update
fi

if [[ $full_install = 1 || $apt_install = 1 ]]; then
    echo Running apt install ...
    sudo apt install -y \
        ripgrep ranger curl fd-find apt-file gimp zathura git \
        firefox thunderbird ncdu
fi


if [[ $full_install = 1 || $pyenv_install = 1 ]]; then
    echo Running pyenv install ...

    echo installing dependencies ...
    sudo apt install -y git make build-essential libssl-dev zlib1g-dev \
        libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
        libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev \
        libffi-dev liblzma-dev

    echo installing pyenv ...
    mkdir -p ~/programs
    git clone https://github.com/pyenv/pyenv.git $pyenv_dir
    cd $pyenv_dir && src/configure && make -C src
    cd -

    echo installing pyenv-virtualenv ...
    git clone https://github.com/pyenv/pyenv-virtualenv.git \
        $($pyenv_dir/bin/pyenv root)/plugins/pyenv-virtualenv
fi

if [[ $chezmoi_install = 1 ]]; then
    # not in full install because usually I need chezmoi to get this file

    echo Installing Chezmoi ...
    sh -c "$(wget -qO- git.io/chezmoi)" -- init \
        --apply ssh://git@github.com/KnorrFG/dotfiles
fi

if [[ $full_install = 1 || $flatpak_install = 1 ]]; then
    echo Installing Flatpack and programs that are installed via it ...

    sudo apt install flatpak
    flatpak remote-add --if-not-exists flathub \
        https://flathub.org/repo/flathub.flatpakrepo

    echo Installing Telegram ...
    flatpak install org.telegram.desktop

    echo Installing Signal ...
    flatpak install org.signal.Signal
fi


if [[ $full_install = 1 || $sway_install = 1 ]]; then
    echo Installing Sway and friends ...

    sudo apt install sway sway-backgrounds swaybg swayidle swaylock alacritty \
        rofi grim slurp wl-copy waybar

    create-sway-exec-files
fi

if [[ $full_install = 1 || $fzf_install = 1 ]]; then
    echo Installing FZF ...
    git clone --depth 1 https://github.com/junegunn/fzf.git $fzf_dir
    $fzf_dir/install
fi

if [[ $full_install = 1 || $nvim_install = 1 ]]; then
		echo Installing nvim ...

    dl_link=$(get_github_latest_release_link https://github.com/neovim/neovim \
        'nvim.appimage')
		if [[ "$dl_link" = "" ]]; then
			echo "couldn't get nvim dl link"
		else
			echo downloading nvim from $dl_link
			path=~/.local/bin/nvim
			wget -O $path $dl_link
			chmod u+x $path
		fi
fi

if [[ $full_install = 1 || $duf_install = 1 ]]; then
	echo Installing duf ...
	dl_link=$(get_github_latest_release_link https://github.com/muesli/duf \
		'duf_{tag[1:]}_linux_amd64.deb')
	echo downloading duf from $dl_link
	deb_path=~/Downloads/${dl_link##*/}
	wget -O $deb_path $dl_link
	sudo apt install -y $deb_path
fi

if [[ $full_install = 1 ]]; then
cat << EOF
Everything finished successfully.
Remember to install a python version
EOF
fi
